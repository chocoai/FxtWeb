#-*- coding:utf-8 -*-
import unittest
from BaseCase.GJB import unittestBase
from BaseCase.GJB import reportbase as rb
class reportBase(unittestBase.unittestBase):
    """业务登记：功能"""

    #@LG.caseLog(u'GJB_YWDJ_GN_001_业务登记')
    def testGJB_YWDJ_GN_001(self):
        """业务登记"""
        rt=rb.reportTest().check_reportTilte(self,self.el,u'业务登记')
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_002_Tab页【全部】')
    def testGJB_YWDJ_GN_002(self):
        """Tab页【全部】"""
        rt=rb.reportTest().check_Tab(self,self.el,u'业务登记',u'全部')
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_003_Tab页【我的业务】')
    def testGJB_YWDJ_GN_003(self):
        """Tab页【我的业务】"""
        rt=rb.reportTest().check_Tab(self,self.el,u'业务登记',u'我的业务')
        self.assertTrue(rt)
    #todo 微信个人业务需要权限
    #@LG.caseLog(u'GJB_YWDJ_GN_004_Tab页【微信个人业务】')
    #def testGJB_YWDJ_GN_004(self):
        #"""Tab页【微信个人业务】"""
        #rt = rb.reportTest().check_Tab(self, self.el, u'业务登记', u'微信个人业务')
        #self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_005_复制新增【未选择数据】')
    def testGJB_YWDJ_GN_005(self):
        """复制新增【未选择数据】"""
        rt=rb.reportTest().check_copyBtn(self,self.el,u'业务登记',0)
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_006_复制新增【选择多条数据】')
    def testGJB_YWDJ_GN_006(self):
        """复制新增【选择多条数据】"""
        rt=rb.reportTest().check_copyBtn(self,self.el,u'业务登记',2)
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_007_复制新增【选择一条数据】')
    def testGJB_YWDJ_GN_007(self):
        """复制新增【一条数据】"""
        rt=rb.reportTest().check_copyBtn(self,self.el,u'业务登记',1)
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_008_删除【未选择数据】')
    def testGJB_YWDJ_GN_008(self):
        """删除【未选择数据】"""
        rt=rb.reportTest().check_deleteBtn(self,self.el,u'业务登记',0)
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_009_删除【一条数据】')
    def testGJB_YWDJ_GN_009(self):
        """删除【一条数据】"""
        rt=rb.reportTest().check_deleteBtn(self,self.el,u'业务登记',1)
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_010_删除【多条数据】')
    def testGJB_YWDJ_GN_010(self):
        """删除【多条数据】"""
        rt=rb.reportTest().check_deleteBtn(self,self.el,u'业务登记',2)
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_011_导出数据【导出一条数据】')
    def testGJB_YWDJ_GN_011(self):
        """导出数据【一条数据】"""
        rt = rb.reportTest().check_importData(self, self.el, u'业务登记',u'全部',1)
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_014_导出数据【删除模板】')
    def testGJB_YWDJ_GN_014(self):
        """导出数据【删除模板】"""
        rt = rb.reportTest().check_importData(self, self.el, u'业务登记', u'全部', 2)
        self.assertTrue(rt)
    #@LG.caseLog(u'GJB_YWDJ_GN_013_导出数据【未选择数据】')
    def testGJB_YWDJ_GN_013(self):
        """导出数据【未选择数据】"""
        rt = rb.reportTest().check_importData(self, self.el, u'业务登记', u'全部',0)
        self.assertTrue(rt)
    # @LG.caseLog(u'GJB_YWDJ_GN_012_导出数据【建立模板导出】')
    def testGJB_YWDJ_GN_012(self):
        """导出数据【建立模板导出】"""
        rt = rb.reportTest().check_importData(self, self.el, u'业务登记', u'全部', 3)
        self.assertTrue(rt)

if __name__=='__main__':
    unittest.main()
